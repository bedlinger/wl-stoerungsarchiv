// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using wls_backend.Data;

#nullable disable

namespace wls_backend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250618130358_FixDescriptionKey")]
    partial class FixDescriptionKey
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DisturbanceLine", b =>
                {
                    b.Property<string>("DisturbancesId")
                        .HasColumnType("text");

                    b.Property<string>("LinesId")
                        .HasColumnType("text");

                    b.HasKey("DisturbancesId", "LinesId");

                    b.HasIndex("LinesId");

                    b.ToTable("DisturbanceLine");
                });

            modelBuilder.Entity("wls_backend.Models.Domain.Disturbance", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<DateTime?>("EndedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("StartedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Disturbance");
                });

            modelBuilder.Entity("wls_backend.Models.Domain.DisturbanceDescription", b =>
                {
                    b.Property<string>("DisturbanceId")
                        .HasColumnType("text");

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("DisturbanceId", "Text", "CreatedAt");

                    b.ToTable("DisturbanceDescription");
                });

            modelBuilder.Entity("wls_backend.Models.Domain.Line", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Line");
                });

            modelBuilder.Entity("DisturbanceLine", b =>
                {
                    b.HasOne("wls_backend.Models.Domain.Disturbance", null)
                        .WithMany()
                        .HasForeignKey("DisturbancesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("wls_backend.Models.Domain.Line", null)
                        .WithMany()
                        .HasForeignKey("LinesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("wls_backend.Models.Domain.DisturbanceDescription", b =>
                {
                    b.HasOne("wls_backend.Models.Domain.Disturbance", null)
                        .WithMany("Descriptions")
                        .HasForeignKey("DisturbanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("wls_backend.Models.Domain.Disturbance", b =>
                {
                    b.Navigation("Descriptions");
                });
#pragma warning restore 612, 618
        }
    }
}
